<?php

// autoload_aliases.php @generated by Strauss

function autoloadAliases( $classname ): void {
  switch( $classname ) {
    case 'ByteKit\\Services':
      class_alias(\WooCommerceCategorySlider\ByteKit\Services::class, \ByteKit\Services::class);
      break;
    case 'ByteKit\\Plugin':
      class_alias(\WooCommerceCategorySlider\ByteKit\Plugin::class, \ByteKit\Plugin::class);
      break;
    case 'ByteKit\\Scripts':
      class_alias(\WooCommerceCategorySlider\ByteKit\Scripts::class, \ByteKit\Scripts::class);
      break;
    case 'ByteKit\\Admin\\Flash':
      class_alias(\WooCommerceCategorySlider\ByteKit\Admin\Flash::class, \ByteKit\Admin\Flash::class);
      break;
    case 'ByteKit\\Admin\\Notices':
      class_alias(\WooCommerceCategorySlider\ByteKit\Admin\Notices::class, \ByteKit\Admin\Notices::class);
      break;
    case 'ByteKit\\Traits\\HasPlugin':
      $includeFile = '<?php namespace ByteKit\Traits; trait HasPlugin { use \WooCommerceCategorySlider\ByteKit\Traits\HasPlugin };';
      include "data://text/plain;base64," . base64_encode($includeFile);
      break;
    case 'ByteKit\\Interfaces\\Scriptable':
      $includeFile = '<?php namespace ByteKit\Interfaces; interface Scriptable extends \WooCommerceCategorySlider\ByteKit\Interfaces\Scriptable {};';
      include "data://text/plain;base64," . base64_encode($includeFile);
      break;
    case 'ByteKit\\Interfaces\\Pluginable':
      $includeFile = '<?php namespace ByteKit\Interfaces; interface Pluginable extends \WooCommerceCategorySlider\ByteKit\Interfaces\Pluginable {};';
      include "data://text/plain;base64," . base64_encode($includeFile);
      break;
    default:
      // Not in this autoloader.
      break;
  }
}

spl_autoload_register( 'autoloadAliases' );

